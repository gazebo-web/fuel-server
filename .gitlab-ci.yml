image: registry.gitlab.com/ignitionrobotics/web/images/web-server-pipelines

variables:
  PKG_NAME: gitlab.com/ignitionrobotics/web/fuelserver
  MYSQL_DATABASE: "fuel_test"
  MYSQL_ROOT_PASSWORD: "root"

#################################################################
# Before Script

before_script:
  - go version

#################################################################
# Cache configuration

cache:
  key: ${CI_COMMIT_REF_SLUG}

#################################################################
# Stages

stages:
  - formatting
  - linting
  - testing
  - building
  - packaging
  - deploying

#################################################################
# Formatting stage

format:
  stage: formatting
  script:
    - go fmt $(go list ./...)

#################################################################
# Linting stage

lint:
  stage: linting
  script:
    - /root/go/bin/golangci-lint run

#################################################################
# Testing stage

test:
  stage: testing
  script:
    - go test
  services:
    - mysql:5.7
  environment:
    name: testing

race:
  stage: testing
  script:
    - go test -race $(go list ./...)
  services:
    - mysql:5.7
  environment:
    name: testing

coverage:
  stage: testing
  script:
    - go test -covermode=atomic -coverprofile=coverage.tx
    - go tool cover -func=coverage.tx
    - bash <(curl -s https://codecov.io/bash)
  services:
    - mysql:5.7
  environment:
    name: testing

#################################################################
# Building stage

build:
  stage: building
  script:
    - go build

#################################################################
# Packaging stage

#package_default:
#  stage: packaging
#  image: docker
#  services:
#    - docker:dind
#  except:
#    - develop
#    - master
#  dependencies:
#    - build
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - docker version
#    - docker info
#    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
#  script:
#    - "docker pull $CI_REGISTRY_IMAGE:next || true"
#    - "docker build --cache-from $CI_REGISTRY_IMAGE:next --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA ."
#    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#
#package_next:
#  stage: packaging
#  image: docker
#  only:
#    - develop
#  services:
#    - docker:dind
#  dependencies:
#    - build
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - docker version
#    - docker info
#    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
#  script:
#    - "docker pull $CI_REGISTRY_IMAGE || true"
#    - "docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:next ."
#    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#    - "docker push $CI_REGISTRY_IMAGE:next"
#
#package_latest:
#  stage: packaging
#  image: docker
#  only:
#    - master
#  services:
#    - docker:dind
#  dependencies:
#    - build
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - docker version
#    - docker info
#    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
#  script:
#    - "docker pull $CI_REGISTRY_IMAGE || true"
#    - "docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest ."
#    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#    - "docker push $CI_REGISTRY_IMAGE:latest"
#  after_script:
#    - "docker logout ${CI_REGISTRY}"

#################################################################
# Deploying stage

integration:
  image: registry.gitlab.com/ignitionrobotics/web/images/web-server-pipelines
  stage: deploying
  dependencies:
    - build
  script:
    - zip -r artifact.zip * .ebextensions -x bin/\* -x vendor/\*
    - python beanstalk_deploy.py
  environment:
    name: integration
    url: https://web-fuel-integration.us-east-1.elasticbeanstalk.com/1.0
  except:
    - master
    - develop
  when: manual

staging:
  image: registry.gitlab.com/ignitionrobotics/web/images/web-server-pipelines
  stage: deploying
  dependencies:
    - build
  script:
    - zip -r artifact.zip * .ebextensions -x bin/\* -x vendor/\*
    - python beanstalk_deploy.py
  environment:
    name: staging
    url: https://web-fuel-staging.us-east-1.elasticbeanstalk.com/1.0
  only:
    - "/^release\\/.*$/"
    - develop
  when: manual

production:
  image: registry.gitlab.com/ignitionrobotics/web/images/web-server-pipelines
  stage: deploying
  dependencies:
    - build
  script:
    - zip -r artifact.zip * .ebextensions -x bin/\* -x vendor/\*
    - python beanstalk_deploy.py
  environment:
    name: production
    url: https://web-fuel-production.us-east-1.elasticbeanstalk.com/1.0
  only:
    - master
  when: manual
